{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fof/nightmode/webpack/bootstrap","webpack://@fof/nightmode/webpack/runtime/compat get default export","webpack://@fof/nightmode/webpack/runtime/define property getters","webpack://@fof/nightmode/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/nightmode/webpack/runtime/make namespace object","webpack://@fof/nightmode/external root \"flarum.core.compat['common/app']\"","webpack://@fof/nightmode/./src/common/Themes.js","webpack://@fof/nightmode/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/Page']\"","webpack://@fof/nightmode/./node_modules/es-cookie/src/es-cookie.js","webpack://@fof/nightmode/./src/forum/helpers/perDeviceSetting.js","webpack://@fof/nightmode/./src/forum/fixInvalidThemeSetting.js","webpack://@fof/nightmode/./src/forum/getTheme.js","webpack://@fof/nightmode/./src/common/setSelectedTheme.js","webpack://@fof/nightmode/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/nightmode/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\r\n\r\n/*\r\n\r\n    JS enum equivalent. Makes sure no value mix-ups are made!\r\n\r\n    DEFAULT is used when an invalid value has been set, as well as for guest and new users.\r\n\r\n*/\r\n\r\nconst Themes = {\r\n  AUTO: 0,\r\n  LIGHT: 1,\r\n  DARK: 2,\r\n\r\n  // adds an \"ultra default\" of 0 if the admins don't set a default tsk tsk tsk\r\n  DEFAULT: () => app.forum.attribute('fof-nightmode.default_theme') || 0,\r\n};\r\n\r\nexport default Themes;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nfunction stringifyAttribute(name, value) {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n    var stringified = '; ' + name;\r\n    if (value === true) {\r\n        return stringified; // boolean attributes shouldn't have a value\r\n    }\r\n    return stringified + '=' + value;\r\n}\r\nfunction stringifyAttributes(attributes) {\r\n    if (typeof attributes.expires === 'number') {\r\n        var expires = new Date();\r\n        expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\r\n        attributes.expires = expires;\r\n    }\r\n    return stringifyAttribute('Expires', attributes.expires ? attributes.expires.toUTCString() : '')\r\n        + stringifyAttribute('Domain', attributes.domain)\r\n        + stringifyAttribute('Path', attributes.path)\r\n        + stringifyAttribute('Secure', attributes.secure)\r\n        + stringifyAttribute('SameSite', attributes.sameSite);\r\n}\r\nexport function encode(name, value, attributes) {\r\n    return encodeURIComponent(name)\r\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent) // allowed special characters\r\n        .replace(/\\(/g, '%28').replace(/\\)/g, '%29') // replace opening and closing parens\r\n        + '=' + encodeURIComponent(value)\r\n        // allowed special characters\r\n        .replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent)\r\n        + stringifyAttributes(attributes);\r\n}\r\nexport function parse(cookieString) {\r\n    var result = {};\r\n    var cookies = cookieString ? cookieString.split('; ') : [];\r\n    for (var _i = 0, cookies_1 = cookies; _i < cookies_1.length; _i++) {\r\n        var cookie = cookies_1[_i];\r\n        var parts = cookie.split('=');\r\n        var value = parts.slice(1).join('=');\r\n        if (value[0] === '\"') {\r\n            value = value.slice(1, -1);\r\n        }\r\n        try {\r\n            var name_1 = decodeURIComponent(parts[0]);\r\n            result[name_1] = value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\r\n        }\r\n        catch (e) {\r\n            // ignore cookies with invalid name/value encoding\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function getAll() {\r\n    return parse(document.cookie);\r\n}\r\nexport function get(name) {\r\n    return getAll()[name];\r\n}\r\nexport function set(name, value, attributes) {\r\n    document.cookie = encode(name, value, __assign({ path: '/' }, attributes));\r\n}\r\nexport function remove(name, attributes) {\r\n    set(name, '', __assign(__assign({}, attributes), { expires: -1 }));\r\n}\r\n","import * as Cookies from 'es-cookie';\r\nimport Themes from '../../common/Themes';\r\n\r\nexport const KEY = 'flarum_nightmode';\r\n\r\nexport const get = () => {\r\n  const value = Cookies.get(KEY);\r\n\r\n  if (!value && value !== '0') {\r\n    return Themes.DEFAULT();\r\n  }\r\n\r\n  return Number(value);\r\n};\r\n\r\nexport const set = (val) =>\r\n  Cookies.set(KEY, val, {\r\n    sameSite: 'lax',\r\n    secure: location.protocol === 'https:',\r\n  });\r\n\r\nexport const remove = () => Cookies.remove(KEY);\r\n","/*\r\n    This function is designed to catch invalid theme values\r\n    and handle them before they can break Flarum for users.\r\n\r\n    E.g. if a user manually edited their cookies to\r\n    set their theme to an invalid value, this theme would\r\n    detect that, and reset it to 0 (auto).\r\n*/\r\n\r\nimport Themes from '../common/Themes';\r\nimport { get, set } from './helpers/perDeviceSetting';\r\n\r\nexport default function fixInvalidThemeSetting() {\r\n  // get array of valid values without duplicate entries\r\n  let validValues = Array.from(new Set(Object.values(Themes)));\r\n\r\n  const Theme = get();\r\n\r\n  if (isNaN(Theme)) {\r\n    resetTheme('Theme is not a valid integer! Resetting...');\r\n  } else if (!validValues.includes(Theme)) {\r\n    // theme out of bounds\r\n    resetTheme(`Theme is out of bounds! Resetting...`);\r\n  }\r\n}\r\n\r\nfunction resetTheme(reason) {\r\n  console.warn(reason);\r\n\r\n  set(Themes.DEFAULT());\r\n}\r\n","import app from 'flarum/common/app';\r\nimport Themes from '../common/Themes';\r\nimport { get } from './helpers/perDeviceSetting';\r\n\r\nexport default function getTheme() {\r\n  const user = app.session.user;\r\n\r\n  const IsUsingPerDeviceSettings = !user || !!user.preferences().fofNightMode_perDevice;\r\n  const SelectedTheme = user && user.preferences().fofNightMode;\r\n\r\n  let value;\r\n\r\n  if (IsUsingPerDeviceSettings) {\r\n    // fetch through LS is per device enabled\r\n    value = get();\r\n  } else {\r\n    if (typeof SelectedTheme === 'number' && SelectedTheme !== -1) {\r\n      // use user prefs\r\n      value = SelectedTheme;\r\n    }\r\n  }\r\n\r\n  return typeof value === 'number' ? value : Themes.DEFAULT();\r\n}\r\n","import app from 'flarum/common/app';\r\n\r\nimport { extend } from 'flarum/common/extend';\r\nimport Page from 'flarum/common/components/Page';\r\n\r\nimport Themes from './Themes';\r\nimport fixInvalidThemeSetting from '../forum/fixInvalidThemeSetting';\r\nimport getTheme from '../forum/getTheme';\r\n\r\nexport default () => {\r\n  extend(Page.prototype, 'oninit', setTheme);\r\n\r\n  // Register setTheme() as the handler for 'prefers-color-scheme' media property\r\n  // change. This allows to make sure the 'fofnightmodechange' event is dispatched\r\n  // when this property changes, and that the correct stylesheets are loaded.\r\n  const prefersColorSchemeDark = window.matchMedia('(prefers-color-scheme: dark)');\r\n  prefersColorSchemeDark.addEventListener('change', setTheme);\r\n};\r\n\r\nexport function setTheme() {\r\n  const { user } = app.session;\r\n\r\n  const PerDevice = app.session.user?.preferences().fofNightMode_perDevice;\r\n\r\n  if (!user || PerDevice) {\r\n    fixInvalidThemeSetting();\r\n  }\r\n\r\n  if (PerDevice) {\r\n    fixInvalidThemeSetting();\r\n  }\r\n\r\n  const CurrentTheme = getTheme();\r\n\r\n  setThemeFromID(CurrentTheme);\r\n}\r\n\r\nexport function getUrls() {\r\n  return {\r\n    day: app.data['fof-nightmode.assets.day'],\r\n    night: app.data['fof-nightmode.assets.night'],\r\n  };\r\n}\r\n\r\nexport function setThemeFromID(theme) {\r\n  if (theme === Themes.DARK) {\r\n    setStyle('night');\r\n  } else if (theme === Themes.LIGHT) {\r\n    setStyle('day');\r\n  } else {\r\n    const preferDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n    setStyle(preferDark ? 'night' : 'day');\r\n  }\r\n}\r\n\r\nexport function setStyle(type) {\r\n  const light = document.querySelector('link.nightmode-light[rel=stylesheet]');\r\n  const dark = document.querySelector('link.nightmode-dark[rel=stylesheet]');\r\n\r\n  bothStyleSheets: if (light && dark) {\r\n    if (getTheme() === Themes.AUTO) break bothStyleSheets;\r\n\r\n    let newLink = document.createElement('link');\r\n\r\n    // onload on link tags not supported in all browsers\r\n    // so we should check it is present in the user's\r\n    // current browser\r\n    if ('onload' in newLink) {\r\n      // if it is, only remove the old link tags after the new\r\n      // one has finished loading (prevents flash of unstyled\r\n      // content)\r\n      newLink.onload = function () {\r\n        light.remove();\r\n        dark.remove();\r\n      };\r\n    } else {\r\n      // if it isn't, just remove the old link tags immediately\r\n      light.remove();\r\n      dark.remove();\r\n    }\r\n\r\n    newLink.rel = 'stylesheet';\r\n    newLink.className = 'nightmode';\r\n    newLink.href = getUrls()[type];\r\n\r\n    document.head.append(newLink);\r\n  } else {\r\n    const el = light || dark || document.querySelector('link.nightmode[rel=stylesheet]');\r\n\r\n    const url = getUrls()[type];\r\n\r\n    if (url !== el.href) {\r\n      el.href = url;\r\n      el.className = 'nightmode';\r\n    }\r\n  }\r\n\r\n  const colorScheme = document.querySelector('meta[name=\"color-scheme\"]');\r\n\r\n  if (colorScheme) {\r\n    colorScheme.content = type === 'night' ? 'dark' : 'light';\r\n  }\r\n\r\n  // Dispatch a 'fofnightmodechange' event with 'day' or 'night' as detail.\r\n  // This allows other extensions to integrate with this one.\r\n  const event = new CustomEvent('fofnightmodechange', { detail: type });\r\n  document.dispatchEvent(event);\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","import app from 'flarum/admin/app';\r\nimport setSelectedTheme from '../common/setSelectedTheme';\r\nimport Themes from '../common/Themes';\r\n\r\nfunction populateThemes() {\r\n  let options = {};\r\n\r\n  // add themes based on JS enum\r\n  Object.keys(Themes).forEach((theme, i) => {\r\n    if (theme === 'DEFAULT') return;\r\n\r\n    options[i] = app.translator.trans(`fof-nightmode.admin.settings.modal.theme_${theme.toLowerCase()}`);\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\napp.initializers.add('fof-nightmode', () => {\r\n  app.extensionData\r\n    .for('fof-nightmode')\r\n    .registerSetting({\r\n      label: app.translator.trans('fof-nightmode.admin.settings.modal.always_show_theme_toggle_on_header'),\r\n      setting: 'fofNightMode.show_theme_toggle_on_header_always',\r\n      type: 'switch',\r\n    })\r\n    .registerSetting({\r\n      label: app.translator.trans('fof-nightmode.admin.settings.modal.show_theme_toggle_in_solid'),\r\n      setting: 'fofNightMode.show_theme_toggle_in_solid',\r\n      type: 'switch',\r\n    })\r\n    .registerSetting({\r\n      label: app.translator.trans('fof-nightmode.admin.settings.modal.default_theme'),\r\n      setting: 'fof-nightmode.default_theme',\r\n      type: 'select',\r\n      options: populateThemes(),\r\n    })\r\n    .registerSetting({\r\n      label: app.translator.trans('fof-nightmode.admin.settings.modal.default_theme_helper'),\r\n      type: 'hidden',\r\n    });\r\n\r\n  setSelectedTheme();\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","AUTO","LIGHT","DARK","DEFAULT","app","attribute","__assign","assign","t","s","i","n","arguments","length","p","apply","this","stringifyAttribute","name","stringified","set","attributes","document","cookie","encodeURIComponent","replace","decodeURIComponent","expires","Date","setMilliseconds","getMilliseconds","toUTCString","domain","path","secure","sameSite","stringifyAttributes","encode","KEY","cookieString","result","_i","cookies_1","split","parts","slice","join","e","parse","Number","Themes","val","Cookies","location","protocol","fixInvalidThemeSetting","validValues","Array","from","Set","values","Theme","isNaN","resetTheme","includes","reason","console","warn","getTheme","user","IsUsingPerDeviceSettings","preferences","fofNightMode_perDevice","SelectedTheme","fofNightMode","extend","Page","setTheme","window","matchMedia","addEventListener","_app$session$user","PerDevice","setThemeFromID","getUrls","day","night","theme","setStyle","matches","type","light","querySelector","dark","bothStyleSheets","newLink","createElement","onload","remove","rel","className","href","head","append","el","url","colorScheme","content","event","CustomEvent","detail","dispatchEvent","add","options","registerSetting","label","trans","setting","keys","forEach","toLowerCase","setSelectedTheme"],"sourceRoot":""}