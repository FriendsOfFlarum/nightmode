{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fof/nightmode/webpack/bootstrap","webpack://@fof/nightmode/webpack/runtime/compat get default export","webpack://@fof/nightmode/webpack/runtime/define property getters","webpack://@fof/nightmode/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/nightmode/webpack/runtime/make namespace object","webpack://@fof/nightmode/external root \"flarum.core.compat['common/app']\"","webpack://@fof/nightmode/./src/common/Themes.ts","webpack://@fof/nightmode/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/Page']\"","webpack://@fof/nightmode/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/nightmode/./node_modules/es-cookie/src/es-cookie.js","webpack://@fof/nightmode/./src/forum/helpers/perDeviceSetting.ts","webpack://@fof/nightmode/./src/forum/fixInvalidThemeSetting.ts","webpack://@fof/nightmode/./src/forum/getTheme.ts","webpack://@fof/nightmode/./src/common/setSelectedTheme.js","webpack://@fof/nightmode/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/nightmode/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/nightmode/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/nightmode/./src/admin/components/NightmodeSettingsPage.tsx","webpack://@fof/nightmode/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/nightmode/./src/admin/components/index.ts","webpack://@fof/nightmode/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\n/*\n\n    JS enum equivalent. Makes sure no value mix-ups are made!\n\n    DEFAULT is used when an invalid value has been set, as well as for guest and new users.\n\n*/\n\nconst Themes = {\n  AUTO: 0,\n  LIGHT: 1,\n  DARK: 2,\n\n  // adds an \"ultra default\" of 0 if the admins don't set a default tsk tsk tsk\n  DEFAULT: () => app.forum.attribute<number>('fof-nightmode.default_theme') || 0,\n};\n\nexport default Themes;\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function stringifyAttribute(name, value) {\n    if (!value) {\n        return '';\n    }\n    let stringified = '; ' + name;\n    if (value === true) {\n        return stringified; // boolean attributes shouldn't have a value\n    }\n    return stringified + '=' + value;\n}\nfunction stringifyAttributes(attributes) {\n    if (typeof attributes.expires === 'number') {\n        const milliseconds = Math.min(Date.now() + attributes.expires * 864e+5, 864e+13);\n        attributes.expires = new Date(milliseconds);\n    }\n    return stringifyAttribute('Expires', attributes.expires ? attributes.expires.toUTCString() : '')\n        + stringifyAttribute('Domain', attributes.domain)\n        + stringifyAttribute('Path', attributes.path)\n        + stringifyAttribute('Secure', attributes.secure)\n        + stringifyAttribute('Partitioned', attributes.partitioned)\n        + stringifyAttribute('SameSite', attributes.sameSite);\n}\nexport function encode(name, value, attributes) {\n    return encodeURIComponent(name)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent) // allowed special characters\n        .replace(/\\(/g, '%28').replace(/\\)/g, '%29') // replace opening and closing parens\n        + '=' + encodeURIComponent(value)\n        // allowed special characters\n        .replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent)\n        + stringifyAttributes(attributes);\n}\nexport function parse(cookieString) {\n    let result = {};\n    const cookies = cookieString ? cookieString.split('; ') : [];\n    for (let cookie of cookies) {\n        const parts = cookie.split('=');\n        let value = parts.slice(1).join('=');\n        if (value[0] === '\"') {\n            value = value.slice(1, -1);\n        }\n        try {\n            const name = decodeURIComponent(parts[0]);\n            result[name] = value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n        }\n        catch (e) {\n            // ignore cookies with invalid name/value encoding\n        }\n    }\n    return result;\n}\nexport function getAll() {\n    return parse(document.cookie);\n}\nexport function get(name) {\n    return getAll()[name];\n}\nexport function set(name, value, attributes) {\n    document.cookie = encode(name, value, { path: '/', ...attributes });\n}\nexport function remove(name, attributes) {\n    set(name, '', { ...attributes, expires: -1 });\n}\n","import * as Cookies from 'es-cookie';\nimport Themes from '../../common/Themes';\n\nexport const KEY = 'flarum_nightmode';\n\nexport const get = () => {\n  const value = Cookies.get(KEY);\n\n  if (!value && value !== '0') {\n    return Themes.DEFAULT();\n  }\n\n  return Number(value);\n};\n\nexport const set = (val) =>\n  Cookies.set(KEY, val, {\n    sameSite: 'lax',\n    secure: location.protocol === 'https:' ? true : undefined,\n  });\n\nexport const remove = () => Cookies.remove(KEY);\n","/*\n    This function is designed to catch invalid theme values\n    and handle them before they can break Flarum for users.\n\n    E.g. if a user manually edited their cookies to\n    set their theme to an invalid value, this theme would\n    detect that, and reset it to 0 (auto).\n*/\n\nimport Themes from '../common/Themes';\nimport { get, set } from './helpers/perDeviceSetting';\n\nexport default function fixInvalidThemeSetting() {\n  // get array of valid values without duplicate entries\n  let validValues = Array.from(new Set(Object.values(Themes)));\n\n  const Theme = get();\n\n  if (isNaN(Theme)) {\n    resetTheme('Theme is not a valid integer! Resetting...');\n  } else if (!validValues.includes(Theme)) {\n    // theme out of bounds\n    resetTheme(`Theme is out of bounds! Resetting...`);\n  }\n}\n\nfunction resetTheme(reason) {\n  console.warn(reason);\n\n  set(Themes.DEFAULT());\n}\n","import app from 'flarum/common/app';\nimport Themes from '../common/Themes';\nimport { get } from './helpers/perDeviceSetting';\n\nexport default function getTheme() {\n  const user = app.session.user;\n\n  const IsUsingPerDeviceSettings = !user || !!user.preferences().fofNightMode_perDevice;\n  const SelectedTheme = user && user.preferences().fofNightMode;\n\n  let value;\n\n  if (IsUsingPerDeviceSettings) {\n    // fetch through LS is per device enabled\n    value = get();\n  } else {\n    if (typeof SelectedTheme === 'number' && SelectedTheme !== -1) {\n      // use user prefs\n      value = SelectedTheme;\n    }\n  }\n\n  return typeof value === 'number' ? value : Themes.DEFAULT();\n}\n","import app from 'flarum/common/app';\n\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\n\nimport Themes from './Themes';\nimport fixInvalidThemeSetting from '../forum/fixInvalidThemeSetting';\nimport getTheme from '../forum/getTheme';\n\nexport default function setSelectedTheme() {\n  extend(Page.prototype, 'oninit', setTheme);\n\n  // Register setTheme() as the handler for 'prefers-color-scheme' media property\n  // change. This allows to make sure the 'fofnightmodechange' event is dispatched\n  // when this property changes, and that the correct stylesheets are loaded.\n  const prefersColorSchemeDark = window.matchMedia('(prefers-color-scheme: dark)');\n  prefersColorSchemeDark.addEventListener('change', setTheme);\n}\n\nexport function setTheme() {\n  const { user } = app.session;\n\n  const PerDevice = app.session.user?.preferences().fofNightMode_perDevice;\n\n  if (!user || PerDevice) {\n    fixInvalidThemeSetting();\n  }\n\n  if (PerDevice) {\n    fixInvalidThemeSetting();\n  }\n\n  const CurrentTheme = getTheme();\n\n  setThemeFromID(CurrentTheme);\n}\n\nexport function getUrls() {\n  return {\n    day: app.data['fof-nightmode.assets.day'],\n    night: app.data['fof-nightmode.assets.night'],\n  };\n}\n\nexport function setThemeFromID(theme) {\n  if (theme === Themes.DARK) {\n    setStyle('night');\n  } else if (theme === Themes.LIGHT) {\n    setStyle('day');\n  } else {\n    const preferDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    setStyle(preferDark ? 'night' : 'day');\n  }\n}\n\nexport function setStyle(type) {\n  const light = document.querySelector('link.nightmode-light[rel=stylesheet]');\n  const dark = document.querySelector('link.nightmode-dark[rel=stylesheet]');\n\n  bothStyleSheets: if (light && dark) {\n    if (getTheme() === Themes.AUTO) break bothStyleSheets;\n\n    let newLink = document.createElement('link');\n\n    // onload on link tags not supported in all browsers\n    // so we should check it is present in the user's\n    // current browser\n    if ('onload' in newLink) {\n      // if it is, only remove the old link tags after the new\n      // one has finished loading (prevents flash of unstyled\n      // content)\n      newLink.onload = function () {\n        light.remove();\n        dark.remove();\n      };\n    } else {\n      // if it isn't, just remove the old link tags immediately\n      light.remove();\n      dark.remove();\n    }\n\n    newLink.rel = 'stylesheet';\n    newLink.className = 'nightmode';\n    newLink.href = getUrls()[type];\n\n    document.head.append(newLink);\n  } else {\n    const el = light || dark || document.querySelector('link.nightmode[rel=stylesheet]');\n\n    const url = getUrls()[type];\n\n    if (url !== el.href) {\n      el.href = url;\n      el.className = 'nightmode';\n    }\n  }\n\n  const colorScheme = document.querySelector('meta[name=\"color-scheme\"]');\n\n  if (colorScheme) {\n    colorScheme.content = type === 'night' ? 'dark' : 'light';\n  }\n\n  // Dispatch a 'fofnightmodechange' event with 'day' or 'night' as detail.\n  // This allows other extensions to integrate with this one.\n  const event = new CustomEvent('fofnightmodechange', { detail: type });\n  document.dispatchEvent(event);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Themes from '../../common/Themes';\nimport extractText from 'flarum/common/utils/extractText';\nimport type Mithril from 'mithril';\n\nexport default class NightmodeSettingsPage extends ExtensionPage {\n  content() {\n    return (\n      <div className=\"NightmodeSettingsPage\">\n        <div className=\"container\">\n          <div className=\"NightmodeSettingsTabPage NightmodeSettingsPage--settings\">\n            <div className=\"Form\">\n              {this.settingsItems().toArray()}\n              <div className=\"Form-group\">{this.submitButton()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  settingsItems(): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'general',\n      <div className=\"Section\">\n        <h3>{app.translator.trans('fof-nightmode.admin.settings.general.heading')}</h3>\n        <p className=\"helpText\">{app.translator.trans('fof-nightmode.admin.settings.general.help')}</p>\n        {this.generalItems().toArray()}\n      </div>\n    );\n\n    return items;\n  }\n\n  generalItems(): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'header-toggle',\n      this.buildSettingComponent({\n        label: app.translator.trans('fof-nightmode.admin.settings.modal.always_show_theme_toggle_on_header'),\n        setting: 'fofNightMode.show_theme_toggle_on_header_always',\n        type: 'switch',\n      })\n    );\n\n    items.add(\n      'default-theme',\n      this.buildSettingComponent({\n        label: app.translator.trans('fof-nightmode.admin.settings.modal.default_theme'),\n        help: app.translator.trans('fof-nightmode.admin.settings.modal.default_theme_helper'),\n        setting: 'fof-nightmode.default_theme',\n        type: 'select',\n        options: this.populateThemes(),\n      })\n    );\n\n    return items;\n  }\n\n  populateThemes(): Record<number, string> {\n    let options: Record<number, string> = {};\n\n    // add themes based on JS enum\n    Object.keys(Themes).forEach((theme, i) => {\n      if (theme === 'DEFAULT') return;\n\n      options[i] = extractText(app.translator.trans(`fof-nightmode.admin.settings.modal.theme_${theme.toLowerCase()}`));\n    });\n\n    return options;\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import NightmodeSettingsPage from './NightmodeSettingsPage';\n\nexport const components = {\n  NightmodeSettingsPage,\n};\n","import app from 'flarum/admin/app';\nimport setSelectedTheme from '../common/setSelectedTheme';\nimport NightmodeSettingsPage from './components/NightmodeSettingsPage';\n\nexport * from './components';\n\napp.initializers.add('fof-nightmode', () => {\n  app.extensionData.for('fof-nightmode').registerPage(NightmodeSettingsPage);\n\n  setSelectedTheme();\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","AUTO","LIGHT","DARK","DEFAULT","app","attribute","_extends","assign","bind","n","e","arguments","length","t","r","apply","stringifyAttribute","name","stringified","getAll","cookieString","_step","result","_iterator","_createForOfIteratorHelperLoose","split","done","parts","slice","join","decodeURIComponent","replace","parse","document","cookie","set","attributes","encodeURIComponent","expires","milliseconds","Math","min","Date","now","toUTCString","domain","path","secure","partitioned","sameSite","stringifyAttributes","encode","KEY","Number","Themes","val","Cookies","location","protocol","undefined","fixInvalidThemeSetting","validValues","Array","from","Set","values","Theme","isNaN","resetTheme","includes","reason","console","warn","getTheme","user","IsUsingPerDeviceSettings","preferences","fofNightMode_perDevice","SelectedTheme","fofNightMode","setSelectedTheme","extend","Page","setTheme","window","matchMedia","addEventListener","_app$session$user","PerDevice","setThemeFromID","getUrls","day","night","theme","setStyle","matches","type","light","querySelector","dark","bothStyleSheets","newLink","createElement","onload","remove","rel","className","href","head","append","el","url","colorScheme","content","event","CustomEvent","detail","dispatchEvent","_setPrototypeOf","setPrototypeOf","__proto__","NightmodeSettingsPage","_ExtensionPage","create","constructor","_proto","m","this","settingsItems","toArray","submitButton","items","ItemList","add","trans","generalItems","buildSettingComponent","label","setting","help","options","populateThemes","keys","forEach","i","extractText","toLowerCase","ExtensionPage","components","registerPage"],"sourceRoot":""}