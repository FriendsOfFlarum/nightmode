{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/nightmode/./node_modules/es-cookie/src/es-cookie.js","webpack://@fof/nightmode/webpack/bootstrap","webpack://@fof/nightmode/webpack/runtime/compat get default export","webpack://@fof/nightmode/webpack/runtime/define property getters","webpack://@fof/nightmode/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/nightmode/webpack/runtime/make namespace object","webpack://@fof/nightmode/external root \"flarum.core.compat['common/app']\"","webpack://@fof/nightmode/./src/common/Themes.js","webpack://@fof/nightmode/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/Page']\"","webpack://@fof/nightmode/./src/forum/helpers/perDeviceSetting.js","webpack://@fof/nightmode/./src/forum/fixInvalidThemeSetting.js","webpack://@fof/nightmode/./src/forum/getTheme.js","webpack://@fof/nightmode/./src/common/setSelectedTheme.js","webpack://@fof/nightmode/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['forum/components/SessionDropdown']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/Select']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@fof/nightmode/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/nightmode/./src/forum/helpers/switchTheme.js","webpack://@fof/nightmode/./src/forum/addSettingsItems.js","webpack://@fof/nightmode/./src/forum/index.ts"],"sourcesContent":["\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nfunction stringifyAttribute(name, value) {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n    var stringified = '; ' + name;\r\n    if (value === true) {\r\n        return stringified; // boolean attributes shouldn't have a value\r\n    }\r\n    return stringified + '=' + value;\r\n}\r\nfunction stringifyAttributes(attributes) {\r\n    if (typeof attributes.expires === 'number') {\r\n        var expires = new Date();\r\n        expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\r\n        attributes.expires = expires;\r\n    }\r\n    return stringifyAttribute('Expires', attributes.expires ? attributes.expires.toUTCString() : '')\r\n        + stringifyAttribute('Domain', attributes.domain)\r\n        + stringifyAttribute('Path', attributes.path)\r\n        + stringifyAttribute('Secure', attributes.secure)\r\n        + stringifyAttribute('SameSite', attributes.sameSite);\r\n}\r\nfunction encode(name, value, attributes) {\r\n    return encodeURIComponent(name)\r\n        .replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent) // allowed special characters\r\n        .replace(/\\(/g, '%28').replace(/\\)/g, '%29') // replace opening and closing parens\r\n        + '=' + encodeURIComponent(value)\r\n        // allowed special characters\r\n        .replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent)\r\n        + stringifyAttributes(attributes);\r\n}\r\nexports.encode = encode;\r\nfunction parse(cookieString) {\r\n    var result = {};\r\n    var cookies = cookieString ? cookieString.split('; ') : [];\r\n    var rdecode = /(%[\\dA-F]{2})+/gi;\r\n    for (var i = 0; i < cookies.length; i++) {\r\n        var parts = cookies[i].split('=');\r\n        var cookie = parts.slice(1).join('=');\r\n        if (cookie.charAt(0) === '\"') {\r\n            cookie = cookie.slice(1, -1);\r\n        }\r\n        try {\r\n            var name_1 = parts[0].replace(rdecode, decodeURIComponent);\r\n            result[name_1] = cookie.replace(rdecode, decodeURIComponent);\r\n        }\r\n        catch (e) {\r\n            // ignore cookies with invalid name/value encoding\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.parse = parse;\r\nfunction getAll() {\r\n    return parse(document.cookie);\r\n}\r\nexports.getAll = getAll;\r\nfunction get(name) {\r\n    return getAll()[name];\r\n}\r\nexports.get = get;\r\nfunction set(name, value, attributes) {\r\n    document.cookie = encode(name, value, __assign({ path: '/' }, attributes));\r\n}\r\nexports.set = set;\r\nfunction remove(name, attributes) {\r\n    set(name, '', __assign(__assign({}, attributes), { expires: -1 }));\r\n}\r\nexports.remove = remove;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\n/*\n\n    JS enum equivalent. Makes sure no value mix-ups are made!\n\n    DEFAULT is used when an invalid value has been set, as well as for guest and new users.\n\n*/\n\nconst Themes = {\n  AUTO: 0,\n  LIGHT: 1,\n  DARK: 2,\n\n  // adds an \"ultra default\" of 0 if the admins don't set a default tsk tsk tsk\n  DEFAULT: () => app.forum.attribute('fof-nightmode.default_theme') || 0,\n};\n\nexport default Themes;\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","import * as Cookies from 'es-cookie';\nimport Themes from '../../common/Themes';\n\nexport const KEY = 'flarum_nightmode';\n\nexport const get = () => {\n  const value = Cookies.get(KEY);\n\n  if (!value && value !== '0') {\n    return Themes.DEFAULT();\n  }\n\n  return Number(value);\n};\n\nexport const set = (val) =>\n  Cookies.set(KEY, val, {\n    sameSite: 'lax',\n    secure: location.protocol === 'https:',\n  });\n\nexport const remove = () => Cookies.remove(KEY);\n","/*\n    This function is designed to catch invalid theme values\n    and handle them before they can break Flarum for users.\n\n    E.g. if a user manually edited their cookies to\n    set their theme to an invalid value, this theme would\n    detect that, and reset it to 0 (auto).\n*/\n\nimport Themes from '../common/Themes';\nimport { get, set } from './helpers/perDeviceSetting';\n\nexport default function fixInvalidThemeSetting() {\n  // get array of valid values without duplicate entries\n  let validValues = Array.from(new Set(Object.values(Themes)));\n\n  const Theme = get();\n\n  if (isNaN(Theme)) {\n    resetTheme('Theme is not a valid integer! Resetting...');\n  } else if (!validValues.includes(Theme)) {\n    // theme out of bounds\n    resetTheme(`Theme is out of bounds! Resetting...`);\n  }\n}\n\nfunction resetTheme(reason) {\n  console.warn(reason);\n\n  set(Themes.DEFAULT());\n}\n","import app from 'flarum/common/app';\nimport Themes from '../common/Themes';\nimport { get } from './helpers/perDeviceSetting';\n\nexport default function getTheme() {\n  const user = app.session.user;\n\n  const IsUsingPerDeviceSettings = !user || !!user.preferences().fofNightMode_perDevice;\n  const SelectedTheme = user && user.preferences().fofNightMode;\n\n  let value;\n\n  if (IsUsingPerDeviceSettings) {\n    // fetch through LS is per device enabled\n    value = get();\n  } else {\n    if (typeof SelectedTheme === 'number' && SelectedTheme !== -1) {\n      // use user prefs\n      value = SelectedTheme;\n    }\n  }\n\n  return typeof value === 'number' ? value : Themes.DEFAULT();\n}\n","import app from 'flarum/common/app';\n\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\n\nimport Themes from './Themes';\nimport fixInvalidThemeSetting from '../forum/fixInvalidThemeSetting';\nimport getTheme from '../forum/getTheme';\n\nexport default () => {\n  extend(Page.prototype, 'oninit', setTheme);\n};\n\nexport function setTheme() {\n  const { user } = app.session;\n\n  const PerDevice = app.session.user?.preferences().fofNightMode_perDevice;\n\n  if (!user || PerDevice) {\n    fixInvalidThemeSetting();\n  }\n\n  if (PerDevice) {\n    fixInvalidThemeSetting();\n  }\n\n  const CurrentTheme = getTheme();\n\n  setThemeFromID(CurrentTheme);\n}\n\nexport function getUrls() {\n  return {\n    day: app.data['fof-nightmode.assets.day'],\n    night: app.data['fof-nightmode.assets.night'],\n  };\n}\n\nexport function setThemeFromID(theme) {\n  if (theme === Themes.DARK) {\n    setStyle('night');\n  } else if (theme === Themes.LIGHT) {\n    setStyle('day');\n  } else {\n    const preferDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    setStyle(preferDark ? 'night' : 'day');\n  }\n}\n\nexport function setStyle(type) {\n  const light = document.querySelector('link.nightmode-light[rel=stylesheet]');\n  const dark = document.querySelector('link.nightmode-dark[rel=stylesheet]');\n\n  if (light && dark) {\n    if (getTheme() === Themes.AUTO) return;\n\n    let newLink = document.createElement('link');\n\n    // onload on link tags not supported in all browsers\n    // so we should check it is present in the user's\n    // current browser\n    if ('onload' in newLink) {\n      // if it is, only remove the old link tags after the new\n      // one has finished loading (prevents flash of unstyled\n      // content)\n      newLink.onload = function () {\n        light.remove();\n        dark.remove();\n      };\n    } else {\n      // if it isn't, just remove the old link tags immediately\n      light.remove();\n      dark.remove();\n    }\n\n    newLink.rel = 'stylesheet';\n    newLink.className = 'nightmode';\n    newLink.href = getUrls()[type];\n\n    document.head.append(newLink);\n  } else {\n    const el = light || dark || document.querySelector('link.nightmode[rel=stylesheet]');\n\n    const url = getUrls()[type];\n\n    if (url !== el.href) {\n      el.href = url;\n      el.className = 'nightmode';\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SessionDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","import app from 'flarum/forum/app';\nimport Themes from '../../common/Themes';\nimport { setTheme } from '../../common/setSelectedTheme';\nimport getTheme from '../getTheme';\nimport * as perDevice from '../helpers/perDeviceSetting';\n\nexport function getIsLight(theme) {\n  return theme === Themes.LIGHT || (theme === Themes.AUTO && !window.matchMedia('(prefers-color-scheme: dark)').matches);\n}\n\nfunction toggleThrough(current) {\n  if (current === Themes.AUTO) {\n    return Themes.LIGHT;\n  }\n\n  if (current === Themes.LIGHT) {\n    return Themes.DARK;\n  }\n\n  return Themes.AUTO;\n}\n\nexport function switchTheme() {\n  const theme = getTheme();\n  const isLight = getIsLight(theme);\n  const user = app.session.user;\n\n  if (user) {\n    const val = isLight ? Themes.DARK : Themes.LIGHT;\n\n    if (!!user.preferences().fofNightMode_perDevice) {\n      perDevice.set(val);\n      setTheme();\n      return;\n    }\n\n    user\n      .savePreferences({\n        fofNightMode: val,\n      })\n      .then(() => {\n        // need to force-update selected theme (as it's only set\n        // on a page load and redraw doesn't count as a page load)\n        setTheme();\n      });\n  } else {\n    const newTheme = toggleThrough(theme);\n\n    perDevice.set(newTheme);\n    setTheme();\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\n\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport SessionDropdown from 'flarum/forum/components/SessionDropdown';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Select from 'flarum/common/components/Select';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport Switch from 'flarum/common/components/Switch';\n\nimport { setTheme } from '../common/setSelectedTheme';\nimport fixInvalidThemeSetting from './fixInvalidThemeSetting';\nimport * as perDevice from './helpers/perDeviceSetting';\nimport getTheme from './getTheme';\nimport Themes from '../common/Themes';\nimport { switchTheme, getIsLight } from './helpers/switchTheme';\n\n// custom function for translations makes it a lot cleaner\nconst trans = (key) => app.translator.trans(`fof-nightmode.forum.user.settings.${key}`);\n\nexport default function () {\n  extend(SettingsPage.prototype, 'settingsItems', function (items) {\n    const { user } = app.session;\n\n    const PerDevice = !!user.preferences().fofNightMode_perDevice;\n\n    if (PerDevice) {\n      fixInvalidThemeSetting();\n    }\n\n    const doesNotSupportAuto = !window.matchMedia('not all and (prefers-color-scheme), (prefers-color-scheme)').matches;\n\n    let currentTheme = getTheme();\n\n    const options = { 0: trans('options.auto'), 1: trans('options.day'), 2: trans('options.night') };\n\n    if (doesNotSupportAuto) {\n      delete options['0'];\n\n      if (currentTheme === Themes.AUTO) {\n        currentTheme = app.forum.attribute('fofNightMode_autoUnsupportedFallback');\n      }\n    }\n\n    items.add(\n      'fof-nightmode',\n      FieldSet.component(\n        {\n          label: trans('heading'),\n          className: 'Settings-theme',\n        },\n        [\n          <p className=\"description\">{trans('description')}</p>,\n          <p className=\"description\">{trans('description2')}</p>,\n          doesNotSupportAuto ? <p class=\"description NightMode-autoUnsupported\">{trans('auto_unsupported')}</p> : null,\n          Switch.component(\n            {\n              className: 'Settings-theme--per_device_cb',\n              state: PerDevice,\n              onchange: (checked) => {\n                if (checked) {\n                  // save current theme as this device's default\n                  perDevice.set(currentTheme);\n                } else {\n                  perDevice.remove();\n                }\n\n                user\n                  .savePreferences({\n                    fofNightMode_perDevice: checked,\n                  })\n                  .then(() => {\n                    // need to force-update selected theme (as it's only set\n                    // on a page load and redraw doesn't count as a page load)\n                    setTheme();\n                  });\n              },\n            },\n            trans('device_specific_setting_checkbox')\n          ),\n          Select.component({\n            value: currentTheme,\n            className: 'Settings-theme--input',\n            onchange: (e) => {\n              if (PerDevice) {\n                perDevice.set(e);\n\n                setTheme();\n                return;\n              }\n\n              user\n                .savePreferences({\n                  fofNightMode: e,\n                })\n                .then(() => {\n                  m.redraw();\n\n                  // need to force-update selected theme (as it's only set\n                  // on a page load and redraw doesn't count as a apge load)\n                  setTheme();\n                });\n            },\n            options,\n          }),\n          <p className=\"Settings-theme--selection_description\">\n            {currentTheme === Themes.AUTO\n              ? trans('option_descriptions.auto')\n              : currentTheme === Themes.LIGHT\n              ? trans('option_descriptions.day')\n              : currentTheme === Themes.DARK\n              ? trans('option_descriptions.night')\n              : // prevents nasty paragraph switching\n                LoadingIndicator.component()}\n          </p>,\n        ]\n      )\n    );\n  });\n\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.session.user && !app.forum.attribute('fofNightMode.showThemeToggleOnHeaderAlways')) return;\n\n    const theme = getTheme();\n    const isLight = getIsLight(theme);\n\n    items.add(\n      'nightmode',\n      <Button\n        className=\"Button Button--flat\"\n        onclick={() => {\n          // const newTheme = toggleThrough(theme);\n\n          // perDevice.set(newTheme);\n          // setTheme();\n          switchTheme();\n        }}\n        icon={theme === Themes.AUTO ? 'fas fa-adjust' : `far fa-${isLight ? 'sun' : 'moon'}`}\n      >\n        {app.translator.trans('fof-nightmode.forum.header.nightmode_button')}\n      </Button>,\n      15\n    );\n  });\n\n  extend(SessionDropdown.prototype, 'items', function (items) {\n    if (!app.session.user) return;\n\n    const isLight = getIsLight(getTheme());\n\n    // Add night mode link to session dropdown\n    items.add(\n      isLight ? 'nightmode' : 'daymode',\n      Button.component(\n        {\n          icon: `far fa-${isLight ? 'moon' : 'sun'}`,\n          onclick: () => {\n            switchTheme();\n            // const val = isLight ? Themes.DARK : Themes.LIGHT;\n\n            // if (!!user.preferences().fofNightMode_perDevice) {\n            //   perDevice.set(val);\n            //   setTheme();\n            //   return;\n            // }\n\n            // user\n            //   .savePreferences({\n            //     fofNightMode: val,\n            //   })\n            //   .then(() => {\n            //     // need to force-update selected theme (as it's only set\n            //     // on a page load and redraw doesn't count as a apge load)\n            //     setTheme();\n            //   });\n          },\n        },\n        app.translator.trans(`fof-nightmode.forum.${isLight ? 'night' : 'day'}`)\n      ),\n      -1\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport addSettingsItems from './addSettingsItems';\nimport setSelectedTheme from '../common/setSelectedTheme';\n\nexport * as perDeviceSetting from './helpers/perDeviceSetting';\nexport * as switchTheme from './helpers/switchTheme';\nexport { default as getTheme } from './getTheme';\n\napp.initializers.add('fof-nightmode', () => {\n  addSettingsItems();\n  setSelectedTheme();\n});\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","stringifyAttribute","name","value","stringified","encode","attributes","encodeURIComponent","replace","decodeURIComponent","expires","Date","setMilliseconds","getMilliseconds","toUTCString","domain","path","secure","sameSite","stringifyAttributes","parse","cookieString","result","cookies","split","rdecode","parts","cookie","slice","join","charAt","e","getAll","document","set","exports","__esModule","get","remove","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","getter","d","a","definition","key","o","defineProperty","enumerable","obj","prop","r","Symbol","toStringTag","flarum","core","compat","AUTO","LIGHT","DARK","DEFAULT","app","KEY","Cookies","Number","Themes","val","location","protocol","fixInvalidThemeSetting","validValues","Array","from","Set","values","Theme","isNaN","resetTheme","includes","reason","console","warn","getTheme","user","IsUsingPerDeviceSettings","preferences","fofNightMode_perDevice","SelectedTheme","fofNightMode","extend","Page","setTheme","PerDevice","setThemeFromID","getUrls","day","night","theme","setStyle","window","matchMedia","matches","type","light","querySelector","dark","newLink","createElement","onload","rel","className","href","head","append","el","url","getIsLight","switchTheme","current","isLight","perDevice","savePreferences","then","newTheme","trans","SettingsPage","items","doesNotSupportAuto","currentTheme","options","add","FieldSet","label","class","Switch","state","onchange","checked","Select","m","redraw","LoadingIndicator","HeaderSecondary","onclick","icon","SessionDropdown","Button","setSelectedTheme"],"sourceRoot":""}