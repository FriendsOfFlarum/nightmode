{"version":3,"sources":["webpack://@fof/nightmode/webpack/bootstrap","webpack://@fof/nightmode/./src/common/Themes.js","webpack://@fof/nightmode/./src/forum/helpers/perDeviceSetting.js","webpack://@fof/nightmode/./src/common/setSelectedTheme.js","webpack://@fof/nightmode/./src/forum/getTheme.js","webpack://@fof/nightmode/./node_modules/es-cookie/src/es-cookie.js","webpack://@fof/nightmode/external \"flarum.core.compat['extend']\"","webpack://@fof/nightmode/./src/forum/fixInvalidThemeSetting.js","webpack://@fof/nightmode/external \"flarum.core.compat['components/Page']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/Button']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/SessionDropdown']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/Select']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/FieldSet']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/nightmode/./src/forum/addSettingsItems.js","webpack://@fof/nightmode/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Themes","AUTO","LIGHT","DARK","DEFAULT","Number","parseInt","app","data","KEY","Cookies","set","val","sameSite","secure","location","protocol","remove","setTheme","user","session","preferences","fofNightMode_perDevice","fixInvalidThemeSetting","setThemeFromID","getTheme","getUrls","day","night","theme","setStyle","window","matchMedia","matches","type","light","document","querySelector","dark","newLink","createElement","onload","rel","className","href","head","append","el","url","extend","Page","IsUsingPerDeviceSettings","SelectedTheme","fofNightMode","__assign","this","assign","arguments","length","apply","stringifyAttribute","stringified","encode","attributes","encodeURIComponent","replace","decodeURIComponent","expires","Date","setMilliseconds","getMilliseconds","toUTCString","domain","path","stringifyAttributes","parse","cookieString","result","cookies","split","rdecode","parts","cookie","slice","join","charAt","e","getAll","flarum","core","compat","validValues","Array","from","Set","values","Theme","isNaN","resetTheme","includes","reason","console","warn","trans","translator","initializers","add","SettingsPage","items","PerDevice","currentTheme","FieldSet","component","label","Switch","state","onchange","checked","perDevice","savePreferences","then","Select","redraw","options","LoadingIndicator","SessionDropdown","isLight","Button","icon","onclick","setSelectedTheme"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","/*\n\n    JS enum equivalent. Makes sure no value mix-ups are made!\n\n    DEFAULT is used when an invalid value has been set, as well as for guest and new users.\n\n*/\n\nconst Themes = {\n    AUTO: 0,\n    LIGHT: 1,\n    DARK: 2,\n\n    // adds an \"ultra default\" of 0 if the admins don't set a default tsk tsk tsk\n    DEFAULT: () => Number.parseInt(app.data['fof-nightmode.default_theme']) || 0,\n};\n\nexport default Themes;\n","import * as Cookies from 'es-cookie';\nimport Themes from '../../common/Themes';\n\nexport const KEY = 'flarum_nightmode';\n\nexport const get = () => {\n    const value = Cookies.get(KEY);\n\n    if (!value && value !== '0') {\n        return Themes.DEFAULT();\n    }\n\n    return Number(value);\n};\n\nexport const set = (val) =>\n    Cookies.set(KEY, val, {\n        sameSite: 'lax',\n        secure: location.protocol === 'https:',\n    });\n\nexport const remove = () => Cookies.remove(KEY);\n","import { extend } from 'flarum/extend';\nimport Page from 'flarum/components/Page';\n\nimport Themes from './Themes';\nimport fixInvalidThemeSetting from '../forum/fixInvalidThemeSetting';\nimport getTheme from '../forum/getTheme';\n\nexport default () => {\n    extend(Page.prototype, 'oninit', setTheme);\n};\n\nexport function setTheme() {\n    const { user } = app.session;\n\n    if (!user) {\n        // Default to automatic theme when visiting as guest\n        setThemeFromID(Themes.DEFAULT());\n        return;\n    }\n\n    const PerDevice = user.preferences().fofNightMode_perDevice;\n\n    if (PerDevice) {\n        fixInvalidThemeSetting();\n    }\n\n    const CurrentTheme = getTheme();\n\n    setThemeFromID(CurrentTheme);\n}\n\nexport function getUrls() {\n    return {\n        day: app.data['fof-nightmode.assets.day'],\n        night: app.data['fof-nightmode.assets.night'],\n    };\n}\n\nexport function setThemeFromID(theme) {\n    if (theme === Themes.DARK) {\n        setStyle('night');\n    } else if (theme === Themes.LIGHT) {\n        setStyle('day');\n    } else {\n        const preferDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        setStyle(preferDark ? 'night' : 'day');\n    }\n}\n\nexport function setStyle(type) {\n    const light = document.querySelector('link.nightmode-light[rel=stylesheet]');\n    const dark = document.querySelector('link.nightmode-dark[rel=stylesheet]');\n\n    if (light && dark) {\n        if (getTheme() === Themes.AUTO) return;\n\n        let newLink = document.createElement('link');\n\n        // onload on link tags not supported in all browsers\n        // so we should check it is present in the user's\n        // current browser\n        if ('onload' in newLink) {\n            // if it is, only remove the old link tags after the new\n            // one has finished loading (prevents flash of unstyled\n            // content)\n            newLink.onload = function () {\n                light.remove();\n                dark.remove();\n            };\n        } else {\n            // if it isn't, just remove the old link tags immediately\n            light.remove();\n            dark.remove();\n        }\n\n        newLink.rel = 'stylesheet';\n        newLink.className = 'nightmode';\n        newLink.href = getUrls()[type];\n\n        document.head.append(newLink);\n    } else {\n        const el = light || dark || document.querySelector('link.nightmode[rel=stylesheet]');\n\n        const url = getUrls()[type];\n\n        if (url !== el.href) {\n            el.href = url;\n            el.className = 'nightmode';\n        }\n    }\n}\n","import Themes from '../common/Themes';\nimport { get } from './helpers/perDeviceSetting';\n\nexport default function getTheme() {\n    const user = app.session.user;\n\n    const IsUsingPerDeviceSettings = user && !!user.preferences().fofNightMode_perDevice;\n    const SelectedTheme = user && user.preferences().fofNightMode;\n\n    let value;\n\n    if (IsUsingPerDeviceSettings) {\n        // fetch through LS is per device enabled\n        value = get();\n    } else {\n        if (typeof SelectedTheme === 'number' && SelectedTheme !== -1) {\n            // use user prefs\n            value = SelectedTheme;\n        }\n    }\n\n    return typeof value === 'number' ? value : Themes.DEFAULT();\n}\n","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nfunction stringifyAttribute(name, value) {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n    var stringified = '; ' + name;\r\n    if (value === true) {\r\n        return stringified; // boolean attributes shouldn't have a value\r\n    }\r\n    return stringified + '=' + value;\r\n}\r\nfunction stringifyAttributes(attributes) {\r\n    if (typeof attributes.expires === 'number') {\r\n        var expires = new Date();\r\n        expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\r\n        attributes.expires = expires;\r\n    }\r\n    return stringifyAttribute('Expires', attributes.expires ? attributes.expires.toUTCString() : '')\r\n        + stringifyAttribute('Domain', attributes.domain)\r\n        + stringifyAttribute('Path', attributes.path)\r\n        + stringifyAttribute('Secure', attributes.secure)\r\n        + stringifyAttribute('SameSite', attributes.sameSite);\r\n}\r\nfunction encode(name, value, attributes) {\r\n    return encodeURIComponent(name)\r\n        .replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent) // allowed special characters\r\n        .replace(/\\(/g, '%28').replace(/\\)/g, '%29') // replace opening and closing parens\r\n        + '=' + encodeURIComponent(value)\r\n        // allowed special characters\r\n        .replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent)\r\n        + stringifyAttributes(attributes);\r\n}\r\nexports.encode = encode;\r\nfunction parse(cookieString) {\r\n    var result = {};\r\n    var cookies = cookieString ? cookieString.split('; ') : [];\r\n    var rdecode = /(%[\\dA-F]{2})+/gi;\r\n    for (var i = 0; i < cookies.length; i++) {\r\n        var parts = cookies[i].split('=');\r\n        var cookie = parts.slice(1).join('=');\r\n        if (cookie.charAt(0) === '\"') {\r\n            cookie = cookie.slice(1, -1);\r\n        }\r\n        try {\r\n            var name_1 = parts[0].replace(rdecode, decodeURIComponent);\r\n            result[name_1] = cookie.replace(rdecode, decodeURIComponent);\r\n        }\r\n        catch (e) {\r\n            // ignore cookies with invalid name/value encoding\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.parse = parse;\r\nfunction getAll() {\r\n    return parse(document.cookie);\r\n}\r\nexports.getAll = getAll;\r\nfunction get(name) {\r\n    return getAll()[name];\r\n}\r\nexports.get = get;\r\nfunction set(name, value, attributes) {\r\n    document.cookie = encode(name, value, __assign({ path: '/' }, attributes));\r\n}\r\nexports.set = set;\r\nfunction remove(name, attributes) {\r\n    set(name, '', __assign(__assign({}, attributes), { expires: -1 }));\r\n}\r\nexports.remove = remove;\r\n","module.exports = flarum.core.compat['extend'];","/*\n    This function is designed to catch invalid theme values\n    and handle them before they can break Flarum for users.\n\n    E.g. if a user manually edited their cookies to\n    set their theme to an invalid value, this theme would\n    detect that, and reset it to 0 (auto).\n*/\n\nimport Themes from '../common/Themes';\nimport { get, set } from './helpers/perDeviceSetting';\n\nexport default function fixInvalidThemeSetting() {\n    // get array of valid values without duplicate entries\n    let validValues = Array.from(new Set(Object.values(Themes)));\n\n    const Theme = get();\n\n    if (isNaN(Theme)) {\n        resetTheme('Theme is not a valid integer! Resetting...');\n    } else if (!validValues.includes(Theme)) {\n        // theme out of bounds\n        resetTheme(`Theme is out of bounds! Resetting...`);\n    }\n}\n\nfunction resetTheme(reason) {\n    console.warn(reason);\n\n    set(Themes.DEFAULT());\n}\n","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/SessionDropdown'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/FieldSet'];","module.exports = flarum.core.compat['components/Switch'];","import { extend } from 'flarum/extend';\n\nimport SettingsPage from 'flarum/components/SettingsPage';\nimport Button from 'flarum/components/Button';\nimport SessionDropdown from 'flarum/components/SessionDropdown';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport Select from 'flarum/components/Select';\nimport FieldSet from 'flarum/components/FieldSet';\nimport Switch from 'flarum/components/Switch';\n\nimport { setTheme } from '../common/setSelectedTheme';\nimport fixInvalidThemeSetting from './fixInvalidThemeSetting';\nimport * as perDevice from './helpers/perDeviceSetting';\nimport getTheme from './getTheme';\nimport Themes from '../common/Themes';\n\n// custom function for translations makes it a lot cleaner\nconst trans = (key) => app.translator.trans(`fof-nightmode.forum.user.settings.${key}`);\n\nexport default function () {\n    extend(SettingsPage.prototype, 'settingsItems', function (items) {\n        const { user } = app.session;\n\n        const PerDevice = !!user.preferences().fofNightMode_perDevice;\n\n        if (PerDevice) {\n            fixInvalidThemeSetting();\n        }\n\n        const currentTheme = getTheme();\n\n        items.add(\n            'fof-nightmode',\n            FieldSet.component(\n                {\n                    label: trans('heading'),\n                    className: 'Settings-theme',\n                },\n                [\n                    <p className=\"description\">{trans('description')}</p>,\n                    <p className=\"description\">{trans('description2')}</p>,\n                    Switch.component(\n                        {\n                            className: 'Settings-theme--per_device_cb',\n                            state: PerDevice,\n                            onchange: (checked) => {\n                                if (checked) {\n                                    // save current theme as this device's default\n                                    perDevice.set(currentTheme);\n                                } else {\n                                    perDevice.remove();\n                                }\n\n                                user.savePreferences({\n                                    fofNightMode_perDevice: checked,\n                                }).then(() => {\n                                    // need to force-update selected theme (as it's only set\n                                    // on a page load and redraw doesn't count as a page load)\n                                    setTheme();\n                                });\n                            },\n                        },\n                        trans('device_specific_setting_checkbox')\n                    ),\n                    Select.component({\n                        value: currentTheme,\n                        className: 'Settings-theme--input',\n                        onchange: (e) => {\n                            if (PerDevice) {\n                                perDevice.set(e);\n\n                                setTheme();\n                                return;\n                            }\n\n                            user.savePreferences({\n                                fofNightMode: Number.parseInt(e),\n                            }).then(() => {\n                                m.redraw();\n\n                                // need to force-update selected theme (as it's only set\n                                // on a page load and redraw doesn't count as a apge load)\n                                setTheme();\n                            });\n                        },\n                        options: [trans('options.auto'), trans('options.day'), trans('options.night')],\n                    }),\n                    <p className=\"Settings-theme--selection_description\">\n                        {currentTheme === Themes.AUTO\n                            ? trans('option_descriptions.auto')\n                            : currentTheme === Themes.LIGHT\n                            ? trans('option_descriptions.day')\n                            : currentTheme === Themes.DARK\n                            ? trans('option_descriptions.night')\n                            : // prevents nasty paragraph switching\n                              LoadingIndicator.component()}\n                    </p>,\n                ]\n            )\n        );\n    });\n\n    extend(SessionDropdown.prototype, 'items', function (items) {\n        if (!app.session.user) return;\n\n        const user = app.session.user;\n        const theme = getTheme();\n        const isLight = theme === Themes.LIGHT || (theme === Themes.AUTO && !window.matchMedia('(prefers-color-scheme: dark)').matches);\n\n        // Add night mode link to session dropdown\n        items.add(\n            isLight ? 'nightmode' : 'daymode',\n            Button.component(\n                {\n                    icon: `far fa-${isLight ? 'moon' : 'sun'}`,\n                    onclick: () => {\n                        const val = isLight ? Themes.DARK : Themes.LIGHT;\n\n                        if (!!user.preferences().fofNightMode_perDevice) {\n                            perDevice.set(val);\n                            setTheme();\n                            return;\n                        }\n\n                        user.savePreferences({\n                            fofNightMode: val,\n                        }).then(() => {\n                            // need to force-update selected theme (as it's only set\n                            // on a page load and redraw doesn't count as a apge load)\n                            setTheme();\n                        });\n                    },\n                },\n                app.translator.trans(`fof-nightmode.forum.${isLight ? 'night' : 'day'}`)\n            ),\n            -1\n        );\n    });\n}\n","import addSettingsItems from './addSettingsItems';\nimport setSelectedTheme from '../common/setSelectedTheme';\n\napp.initializers.add('fof-nightmode', () => {\n    addSettingsItems();\n    setSelectedTheme();\n});\n"],"sourceRoot":""}